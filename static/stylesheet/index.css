:root
{
    /* color */

    --colour-dark-bg: #222;
    --colour-dark-fg: #222;
    --colour-light-bg: #eee;
    --colour-light-fg: #eee;

    /* accent colours */
    --colour-red-bg: #622;
    --colour-green-bg: #252;
    --colour-blue-bg: #57e;
    --colour-white-bg: #bbb;
    --colour-black-bg: #333;
    --colour-grey-bg: #777;

    /* functional colours */

    /* Don‚Äôt forget to upgrade theme-color meta tag and manifest as well */
    --colour-bg: var(--colour-dark-bg);
    --colour-fg: var(--colour-light-fg);
    --colour-section-separator: black;

    /* sizes */

    --action-button-size: 1.5em;
    --life-font-size: 2.7em;
}

html
{
    box-sizing: border-box;
    height: 100%;
    height: 100dvh;
    color: var(--colour-fg);
    font-size: 5vh; /* FIXME In general adapt to weird aspect ratios better */
    font-family: serif;
    text-align: center;
    background-color: var(--colour-bg);
}

*,
*::before,
*::after
{
    box-sizing: inherit;
    color: inherit;
    font: inherit;
    text-align: inherit;
    text-shadow: inherit;
    background-color: transparent;
    border: none;
}

[hidden]
{
    display: none !important;
}

body
{
    height: 100%;
    margin: 0;
}

button
{
    cursor: pointer;
}

input
{
    max-width: 100%;
    border: currentColor solid thin;
    border-radius: 0.25ch;
}

@media (prefers-reduced-motion)
{
    *
    {
        transition: none !important;
        animation: none !important;
    }
}

/* template: App */

.t-App
{
    display: grid;
    grid-template:
        "a1 a2" 1fr
        "toolbox toolbox" 0
        "b1 b2" 1fr;
    align-items: stretch;
    width: 100%;
    height: 100%;
}

.t-App__toolbox
{
    z-index: 2;
    grid-area: toolbox;
    height: 0;
    margin-block-start: calc(var(--action-button-size) / -2);
}

.t-App__panel
{
    grid-column-end: span 2;
    padding-block: calc(var(--action-button-size) / 2);
}

/* organism: Player */

.o-Player
{
    --gradient-width: 100%;
    --colour-a: red;
    --colour-b: var(--colour-a);
    --shadow-colour: transparent;

    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    overflow: hidden;
    color: var(--colour-light-fg);
    text-shadow: 0 0 0.25ch var(--shadow-colour);
    background: var(--colour-a);
    outline: var(--colour-section-separator) solid 1px;
    transition: background ease-in 200ms;
}

/* TODO Remove once https://bugs.chromium.org/p/chromium/issues/detail?id=704070 is fixed */
html[data-need-chromium-704070-workaround] .o-Player:focus-within
{
    order: -1;
}

.o-Player[data-secondary-colour]:not([data-secondary-colour="undefined"])
{
    /* Use gradient only if second colour is defined, because transition
     * doesn‚Äôt work for background-image (which gradient is) */
    background:
        linear-gradient(
            to right,
            var(--colour-a),
            calc(50% - var(--gradient-width) / 2),
            var(--colour-a),
            var(--colour-b),
            calc(50% + var(--gradient-width) / 2),
            var(--colour-b)
        );
}

.o-Player__content
{
    transition: transform ease-in 200ms;
}

.o-Player--opponent
{
    transform: rotate(180deg);
}

.o-Player--opponent [name="name"]:focus
{
    transform: rotate(180deg);
}

[data-main-colour=red] { --colour-a: var(--colour-red-bg); }
[data-secondary-colour=red] { --colour-b: var(--colour-red-bg); }

[data-main-colour=green] { --colour-a: var(--colour-green-bg); }
[data-secondary-colour=green] { --colour-b: var(--colour-green-bg); }

[data-main-colour=blue] { --colour-a: var(--colour-blue-bg); }
[data-secondary-colour=blue] { --colour-b: var(--colour-blue-bg); }

[data-main-colour=white] { --colour-a: var(--colour-white-bg); }
[data-secondary-colour=white] { --colour-b: var(--colour-white-bg); }

[data-main-colour=white],
[data-secondary-colour=white]
{
    --shadow-colour: var(--colour-dark-fg);
}

[data-main-colour=black] { --colour-a: var(--colour-black-bg); }
[data-secondary-colour=black] { --colour-b: var(--colour-black-bg); }

[data-main-colour=grey] { --colour-a: var(--colour-grey-bg); }
[data-secondary-colour=grey] { --colour-a: var(--colour-grey-bg); }

.o-Player__nameHeading
{
    position: relative;
    transition: transform ease-in-out 200ms;
    z-index: 1;
    display: inline-block;
    margin: 0;
    padding-block: 0.25em;
    overflow: hidden;
}

.o-Player[data-chosen=true] .o-Player__nameHeading
{
    transform: scale(2); /* FIXME Maybe o-Player background animation instead? */
}

.o-Player__nameHeading::before,
.o-Player__nameHeading::after
{
    display: inline-block;
    content: 'üíÄ';
}

.o-Player__nameHeading::before
{
    visibility: hidden;
}

.o-Player__nameHeading::after
{
    transform: translateY(-3em);
    transition: transform cubic-bezier(1, 0.75, 0.9, 1.2) 500ms; /* TODO Better animation */
}

[data-dead=true] .o-Player__nameHeading::after
{
    transform: translateY(0);
}

.o-Player__name
{
    border: 0;
}

.o-Player__openSettings
 {
    position: absolute;
    top: 0;
    right: 0;
    display: block;
    width: var(--action-button-size);
    height: var(--action-button-size);
    line-height: var(--action-button-size);
    overflow: hidden;
    white-space: pre;
    margin: 0;
    padding: 0;
}

@supports (height: 1dvh)
{
    .o-Player__openSettings
    {
        top: auto;
        bottom: 0;
    }
}

.o-Player__openSettings::before
{
    content: '‚öôÔ∏è';
    filter: brightness(0) contrast(0.8);
    opacity: 0.5;
    transition: opacity ease-out 200ms;
}

.o-Player__openSettings[aria-selected="true"]::before
{
    content: '‚úî';
    filter: none;
    opacity: 1;
    transition:
        opacity ease-out 200ms,
        filter ease-out 200ms;
}

.o-Player__message
{
    --offset-y: 0em;

    position: absolute;
    top: 50%;
    left: 50%;
    z-index: 1;
    max-width: 100%;
    padding: 0.5em;
    font-weight: bold;
    font-family: sans-serif;
    background-color: rgba(0, 0, 0, 0.7);
    border-radius: 0.5em;
    transform:
        translateX(-50%)
        translateY(calc(-0.75 * var(--life-font-size) + var(--offset-y)));
    transition:
        opacity ease-out 200ms,
        transform ease-in 200ms;
    pointer-events: none;
}

.o-Player__message[data-incoming=true]
{
    --offset-y: 0.25em;

    transition: opacity ease-out 200ms;
}

.o-Player__message[hidden]
{
    display: block;
    opacity: 0;
}

/* molecule: Life */

.m-Life
{
    --value-width: 3.5ch;
    --button-size: 1.5ch;

    position: relative;
    display: flex;
    flex-direction: column-reverse;
    align-items: center;
    justify-content: center;
    font-size: var(--life-font-size);
    padding-inline: 0.1em;
}

.m-Life__button
{
    --scale: 0.7;

    position: relative;
    display: inline-block;
    flex: 0 0 auto;
    width: var(--button-size);
    height: var(--button-size);
    font-size: calc(var(--scale) * 1em);
    line-height: 0.5; /* FIXME font‚Äìspecific. Probably need to go with icons. */
    vertical-align: middle;
    border: currentColor solid;
    border-radius: 50%;
    box-shadow: 0 0 0.125ch var(--shadow-colour);
}

.m-Life__button::before
{
    --height: calc(var(--button-size) + 1em / var(--scale));
    --width: calc(var(--button-size) + var(--value-width));

    position: absolute;
    top: calc(50% - var(--height) / 2);
    left: calc(50% - var(--width) / 2);
    width: var(--width);
    height: var(--height);
    content: '';
}

.m-Life__button--decrease
{
    order: -1;
}

.m-Life__value
{
    flex: 0 1 auto;
    width: var(--value-width);
    color: inherit;
    font: inherit;
    text-align: center;
    background-color: transparent;
    border: none;
    -moz-appearance: textfield;
}

.m-Life__value::-webkit-outer-spin-button,
.m-Life__value::-webkit-inner-spin-button
{
    margin: 0;
    -webkit-appearance: none;
}

@media (min-aspect-ratio: 2/5)
{
    .m-Life
    {
        flex-direction: row;
        flex-wrap: wrap;
    }
}

/* molecule: Options */

.m-Options
 {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    font-size: 0.65em;
    text-align: start;
    margin-inline: 0;
    padding-inline: 0;
}

.m-Options__item
{
    display: inline-block;
    margin: 0;
}

.m-Options__checkbox,
.m-Options__label
{
    width: 0;
    height: 0;
    margin: 0;
    overflow: hidden;
}

.m-Options__icon
{
    --size: 2em;

    display: inline-block;
    width: var(--size);
    height: var(--size);
    line-height: var(--size);
    text-align: center;
    border: transparent solid thin;
    border-radius: 25%;
    filter: grayscale();
}

.m-Options__label
{
    display: inline-block;
    width: 0;
    height: 0;
    overflow: hidden;
}

:checked + .m-Options__icon
{
    border-color: currentColor;
    filter: none;
}

/* atom: Action */

.a-Action
{
    width: var(--action-button-size);
    height: var(--action-button-size);
    line-height: 1;
    background-color: black;
    border-radius: 50%;
    box-shadow:
        0 0.5em 1.5em rgba(0, 0, 0, 0.19),
        0 0.25em 0.25em rgba(0, 0, 0, 0.23);
}
