:root
{
    /* color */

    --colour-dark-bg: #222;
    --colour-dark-fg: #222;
    --colour-light-bg: #eee;
    --colour-light-fg: #eee;

    /* accent colours */
    --colour-red-bg: #622;
    --colour-green-bg: #252;
    --colour-blue-bg: #57e;
    --colour-white-bg: #bbb;
    --colour-black-bg: #333;
    --colour-grey-bg: #777;

    /* functional colours */

    /* Don’t forget to upgrade theme-color meta tag and manifest as well */
    --colour-bg: var(--colour-dark-bg);
    --colour-fg: var(--colour-light-fg);
    --colour-section-separator: black;

    /* sizes */

    --action-button-size: 1.5em;
}

html
{
    box-sizing: border-box;
    font-family: serif;
    background-color: var(--colour-bg);
    color: var(--colour-fg);
    height: 100%;
    font-size: 5vh; /* FIXME In general adapt to weird aspect ratios better */
    text-align: center;
}

*,
*::before,
*::after
{
    box-sizing: inherit;
    font: inherit;
    text-align: inherit;
    background-color: transparent;
    color: inherit;
    border: none;
}

body
{
    height: 100%;
    margin: 0;
}

@media (prefers-reduced-motion)
{
    *
    {
        transition: none !important;
        animation: none !important;
    }
}

/* template: App */

.t-App
{
    height: 100%;
    width: 100%;
    display: grid;
    grid-template:
        "a1 a2"
        "toolbox toolbox" 0
        "b1 b2";
    align-items: stretch;
}

.t-App__toolbox
{
    grid-area: toolbox;
    margin-block-start: calc(var(--action-button-size) / -2);
    z-index: 2;
}

.t-App__panel
{
    grid-column-end: span 2;
}

/* organism: Player */

.o-Player
{
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
    outline: var(--colour-section-separator) solid 1px;
    overflow: hidden;
}

.o-Player__content
{
    transition: transform ease-in 200ms;
}

.o-Player--opponent:not(:focus-within) > .o-Player__content,
.o-Player--opponent[data-button-focus-within=true] > .o-Player__content
{
    transform: rotate(180deg);
}

.o-Player--red
{
    background-color: var(--colour-red-bg);
    color: var(--colour-light-fg);
}

.o-Player--green
{
    background-color: var(--colour-green-bg);
    color: var(--colour-light-fg);
}

.o-Player--blue
{
    background-color: var(--colour-blue-bg);
    color: var(--colour-light-fg);
}

.o-Player--white
{
    background-color: var(--colour-white-bg);
    color: var(--colour-dark-fg);
}

.o-Player--black
{
    background-color: var(--colour-black-bg);
    color: var(--colour-light-fg);
}

.o-Player--grey
{
    background-color: var(--colour-grey-bg);
    color: var(--colour-light-fg);
}

.o-Player__name
{
    margin: 0;
    transition: transform ease-in-out 200ms;
}

.o-Player[data-chosen=true] .o-Player__name
{
    transform: scale(2); /* FIXME Maybe o-Player background animation instead? */
}

.o-Player__message
{
    background-color: rgba(0, 0, 0, 0.7);
    position: absolute;
    top: 0.5em;
    left: 50%;
    transform: translateX(-50%);
    max-width: 100%;
    padding: 0.5em;
    transition:
        opacity ease-out 200ms,
        transform ease-in 200ms;
    pointer-events: none;
    border-radius: 0.5em;
    font-weight: bold;
    font-family: sans-serif;
}

.o-Player__message[data-incoming=true]
{
    transition:
        opacity ease-out 200ms;
    transform: translateX(-50%) translateY(0.25em);
}

.o-Player__message[hidden]
{
    display: block;
    opacity: 0;
}

.o-Player__nameInput
{
    width: 100vw;
    border: 0;
}

/* molecule: Life */

.m-Life
{
    display: flex;
    flex-direction: column-reverse;
    justify-content: center;
    align-items: center;
    font-size: 2.7em;
}

.m-Life__button
{
    flex: 0 0 auto;
    padding-inline: 0.25em;
    padding-block: 0.5em;
}

.m-Life__button--decrease
{
    order: -1;
}

.m-Life__buttonIcon
{
    --size: 1.5ch;

    display: block;
    font-size: 0.7em;
    width: var(--size);
    height: var(--size);
    border: currentColor solid;
    border-radius: 50%;
    line-height: 0.5; /* FIXME font–specific. Probably need to go with icons. */
}

.m-Life__value
{
    width: 3ch;
    flex: 0 1 auto;
    font: inherit;
    text-align: center;
    border: none;
    background-color: transparent;
    color: inherit;
    -moz-appearance: textfield;
}

.m-Life__value::-webkit-outer-spin-button,
.m-Life__value::-webkit-inner-spin-button
{
    -webkit-appearance: none;
    margin: 0;
}

@media (min-aspect-ratio: 2/5)
{
    .m-Life
    {
        flex-wrap: wrap;
        flex-direction: row;
    }
}

/* atom: Action */

.a-Action
{
    background-color: black;
    border-radius: 50%;
    width: var(--action-button-size);
    height: var(--action-button-size);
    line-height: 1;
    box-shadow:
        0 0.5em 1.5em rgba(0,0,0,0.19),
        0 0.25em 0.25em rgba(0,0,0,0.23);
}
